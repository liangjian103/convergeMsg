package com.ctfo.parameter;

import java.util.Calendar;
import java.util.List;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

import com.ctfo.converge.core.ConfBean;
import com.ctfo.converge.core.SystemStatement;

public class QueryTerminalParameterMaim {

	public static void main(String[] args) {
		try {
			// 1、连接MSG，全量或订阅MSG车辆数据
			List<ConfBean> list = SystemStatement.getConfBeanList();
			for (ConfBean confBean : list) {
				QueryTerminalParameter queryTerminalParameter = new QueryTerminalParameter(confBean.getIp(), confBean.getPort(), confBean.getUserType(), confBean.getUserId(), confBean.getUserPW(), confBean.getSubscriber());
				queryTerminalParameter.start();
			}
			clearTimeCache();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/** 定时清空缓存 */
	static void clearTimeCache() {
		Runnable r = new Runnable() {
			public void run() {
				// 清空缓存
				Cache.mapTerminalCache.clear();
			}
		};
		long delay = getNowTo24HourMarginMillse();// 当前时间后X毫秒开始
		int period = 24 * 60 * 60 * 1000;// 间隔时间Y毫秒执行一次
		ScheduledExecutorService service = Executors.newScheduledThreadPool(1);
		service.scheduleAtFixedRate(r, delay, period, TimeUnit.MILLISECONDS);
	}

	/**
	 * 每天凌晨0:00执行
	 * 
	 * @return
	 */
	private static long getNowTo24HourMarginMillse() {
		Calendar cal2 = Calendar.getInstance();
		cal2.add(Calendar.DAY_OF_MONTH, 1);
		cal2.set(Calendar.HOUR_OF_DAY, 0);
		cal2.set(Calendar.MINUTE, 0);
		cal2.set(Calendar.SECOND, 0);
		return (cal2.getTimeInMillis() - System.currentTimeMillis());
	}
}
